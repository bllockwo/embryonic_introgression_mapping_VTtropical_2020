#!/bin/sh
#
#SBATCH -J run_GEVA_DMel
#SBATCH -N 1
#SBATCH --ntasks-per-node=1
#SBATCH --mem=20G
#SBATCH --time=5:00:00
#SBATCH -o ./slurmOut/run_GEVA_DMel.%A_%a.out # Standard output
#SBATCH -p general
#SBATCH --array=1-1189%100


#By Joaquin Nunez, PhD, 2023
#Edited by Luke Proud, April 18, 2025 

###intervals=array_job_guidefile.txt; MAF=0.01 ;SAMPLEIDS=TEST_JCBN2 ;INPUT_VCF=/netfiles/nunezlab/D_melanogaster_resources/Datasets/2024.Nunez_et_al_Genetics/Single_Individuals/CM_pops.AllChrs.Whatshap.shapeit.annot.wSNPids.vcf.gz


## This code takes user input
### Guide file for the Chrs
## ===> this file "array_job_guidefile.txt" is generated by the code: make_Dmel6_ranges.R
intervals=${1}

#What is the intervals file?--> Looks like this:
#The columns are as follows
#1.start    2.end 3.chr 4.range 5.end_adj 6.start_adj           7.joint
# For this script we will use columns 3, 5 and 6.
#2500001	2600001	2L	1e+05	2600000	2500001	2L:2500001-2600000
#2600001	2700001	2L	1e+05	2700000	2600001	2L:2600001-2700000
#18100001	18200001	2L	1e+05	18200000	18100001	2L:18100001-18200000
#18400001	18500001	2L	1e+05	18500000	18400001	2L:18400001-18500000

# We will also need a number for the minimun allele frequency
MAF=${2}

# Also a name for the run "e.g., myRunXYZ"
SAMPLEIDS=${3}

### What VCF set to use:
INPUT_VCF=${4}

#INPUT_VCF=/netfiles/nunezlab/D_melanogaster_resources/Datasets/2024.Nunez_et_al_Genetics/Single_Individuals/CM_pops.AllChrs.Whatshap.shapeit.annot.wSNPids.vcf.gz

########USAGE##########EXAMPLEs
#sbatch \
#--array=1-$( cat array_job_guidefile.txt | wc -l) \
#run_geva_dmel.sh \
#array_job_guidefile.txt \
#0.01 \
#Dmel_GEVA.type \
# VCFfile.vcf
########USAGE##########EXAMPLEs

echo "Guidefile: $intervals"
echo "MAF: $MAF"
echo "Prefix: $SAMPLEIDS"
echo "VCF: $INPUT_VCF"





########BEGIN##########
### Load Modules
module load gcc/13.3.0-xp3epyt \
vcftools/0.1.16 \
htslib/1.19.1-6ivqauw \
bcftools/1.19-iq5mwek

### Link programs
GEVA=/netfiles/nunezlab/Shared_Resources/Software/geva

GUIDE=rename_chrs_dmel.txt
head $GUIDE

### Performance parameters
CPU=$SLURM_CPUS_ON_NODE

### Biological Parameters
REC_MAP=recomb_map_output.csv
##REC=1.25eâˆ’7
MUT=2.8e-9 #-- Peter D. Keightley, et al => doi: 10.1534/genetics.113.158758
NE=724038  #Kapopoulou et al 2021 -> https://doi.org/10.1038/s41598-020-79720-1. For African Flies

### Model Files
INITPROBS=/netfiles/nunezlab/Shared_Resources/Software/geva/hmm/hmm_initial_probs.txt
EMITIONS=/netfiles/nunezlab/Shared_Resources/Software/geva/hmm/hmm_emission_probs.txt


#### make analysis folder
mkdir $SAMPLEIDS
cd $SAMPLEIDS

###########################################################################
###########################################################################
# Generate Internal Variables
###########################################################################
###########################################################################
#This part of the pipeline will generate log files to record warnings and completion status

chr=`awk -F "\t" '{print $3}' ../$intervals | sed -n ${SLURM_ARRAY_TASK_ID}p`
start=`awk -F "\t" '{print $6}' ../$intervals | sed -n ${SLURM_ARRAY_TASK_ID}p`
finish=`awk -F "\t" '{print $5}' ../$intervals | sed -n ${SLURM_ARRAY_TASK_ID}p`

#chr="2L"
#start=5092177
#finish=5292177

echo "now processing CHR" ${chr}.${start}.${finish} ${chr} ${start} ${finish}

###########################################################################
###########################################################################
# Begin Pipeline
###########################################################################
###########################################################################

# VCFtools portion
vcftools \
--gzvcf  $INPUT_VCF \
--chr ${chr} \
--from-bp ${start} \
--to-bp ${finish} \
--maf $MAF \
--recode --recode-INFO-all \
--out ${chr}.${start}.${finish}

bgzip ${chr}.${start}.${finish}.recode.vcf
tabix ${chr}.${start}.${finish}.recode.vcf.gz

# add annotation
bcftools query \
-f '%CHROM\t%POS\t%POS\t%CHROM\_%POS\n' \
${chr}.${start}.${finish}.recode.vcf.gz > ${chr}.${start}.${finish}.annotation.txt

#Index the annotation
bgzip ${chr}.${start}.${finish}.annotation.txt
tabix -s1 -b2 -e2 ${chr}.${start}.${finish}.annotation.txt.gz

# Add annotation
# Note: GEVA wants chromosomes as numeric strings so chr2 must be 2
bcftools annotate \
-a ${chr}.${start}.${finish}.annotation.txt.gz \
-c CHROM,FROM,TO,ID \
--rename-chrs ../$GUIDE \
${chr}.${start}.${finish}.recode.vcf.gz > ${chr}.${start}.${finish}.SNPannotated.forGEVA.vcf 

#Make recombination map for chr
# Remove the chromosome column
echo -e "Position(bp)\tRate(cM/Mb)\tMap(cM)" > ${chr}.${start}.${finish}.header.txt
grep "${chr}" ../$REC_MAP | awk '{ print $6"\t"$4"\t"$5 }'  > ${chr}.${start}.${finish}.body.txt
cat ${chr}.${start}.${finish}.header.txt ${chr}.${start}.${finish}.body.txt > ${chr}.${start}.${finish}.REC_MAP.map

rm ${chr}.${start}.${finish}.header.txt ${chr}.${start}.${finish}.body.txt

# Make bin files
$GEVA/geva_v1beta \
--vcf ${chr}.${start}.${finish}.SNPannotated.forGEVA.vcf \
--map ${chr}.${start}.${finish}.REC_MAP.map \
--out ${chr}.${start}.${finish}

### Run the TMRCA loop

for i in `cat ${chr}.${start}.${finish}.marker.txt | \
sed '1d' |  \
awk '{print $3}'`
do

echo $i

# Run GEVA
$GEVA/geva_v1beta \
--input ${chr}.${start}.${finish}.bin \
--out RUN_${i} \
--treads $CPU \
--mut $MUT \
--hmm $INITPROBS $EMITIONS \
--Ne $NE \
--position $i 

TMP=`sed -n '7p' RUN_${i}.sites.txt`

if [ -z  "$TMP" ] 
then
	echo  " RUN_${i} is empty " >> WARNINGS.log
else
	#Print to common file
	echo -e \
	${chr}.${start}.${finish} \
	${i} \
	${TMP} \
	$SAMPLEIDS \
	>> $SAMPLEIDS.$MAF.TMRCA.${SLURM_ARRAY_TASK_ID}.txt
fi

#Remove Clutter inside the loop
rm RUN_${i}.err
rm RUN_${i}.log
rm RUN_${i}.pairs.txt
rm RUN_${i}.sites.txt

done

#Remove Clutter outside the loop
rm ${chr}.${start}.${finish}.recode.vcf.gz
rm ${chr}.${start}.${finish}.recode.vcf.gz.tbi
rm ${chr}.${start}.${finish}.annotation.txt.gz
rm ${chr}.${start}.${finish}.annotation.txt.gz.tbi
rm ${chr}.${start}.${finish}.log
rm ${chr}.${start}.${finish}.err
rm ${chr}.${start}.${finish}.SNPannotated.forGEVA.vcf
rm ${chr}.${start}.${finish}.bin
rm ${chr}.${start}.${finish}.sample.txt
rm ${chr}.${start}.${finish}.marker.txt
rm ${chr}.${start}.${finish}.REC_MAP.map

echo "done"