.[which(.$p_recur>0.9),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.95),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) -> sims.sel
delta =
foreach(g=2:50, .combine = "rbind"
)%do%{
p1 = sims.sel$p_recur[g]
p0 = sims.sel$p_recur[g-1]
data.frame(g, delta = p1-p0)
}
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line()
gens=200
p = 0.5
q= 1-p
wAA=1
wAa=1
waa=0.8
p_recur=c()
simulating.selection=
foreach(g=1:gens, .combine = "rbind")%do%{
if(g==1){p_recur[g]=p}
p_recur[g+1] = calc_p_t1(p_recur[g],
(1-p_recur[g]),
wAA, wAa, waa)
data.frame(gen=g, p=p_recur[g+1],
wAA=wAA, wAa=wAa, waa=waa, pinit=p)
}
data.frame(gen=0:gens, p_recur=p_recur) %>%
ggplot(aes(
x=gen,
y=p_recur
)) + geom_line(size = 1.5) +
geom_vline(xintercept = 50) +
xlab("Generations") + ylab("p")
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.9),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.95),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) -> sims.sel
delta =
foreach(g=2:50, .combine = "rbind"
)%do%{
p1 = sims.sel$p_recur[g]
p0 = sims.sel$p_recur[g-1]
data.frame(g, delta = p1-p0)
}
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line()
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(paste(expression(Delta),"p", sep = ""))
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta))
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta "p"))
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta,"p"))
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta"p"))
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta)"p")
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta),"p")
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(paste(expression(Delta),"p"))
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta~"p"))
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta*"p"))
gens=1000
p = 0.5
q= 1-p
wAA=1
wAa=1
waa=0.8
p_recur=c()
simulating.selection=
foreach(g=1:gens, .combine = "rbind")%do%{
if(g==1){p_recur[g]=p}
p_recur[g+1] = calc_p_t1(p_recur[g],
(1-p_recur[g]),
wAA, wAa, waa)
data.frame(gen=g, p=p_recur[g+1],
wAA=wAA, wAa=wAa, waa=waa, pinit=p)
}
library(foreach)
library(tidyverse)
#define function
calc_p_t1 = function( p, q, wAA, wAa, waa ){
num=p^2*wAA + p*q*wAa
dem=p^2*wAA + 2*p*q*wAa + q^2*waa
p_t1 = num/dem
return(p_t1)
}
gens=1000
p = 0.5
q= 1-p
wAA=1
wAa=1
waa=0.8
p_recur=c()
simulating.selection=
foreach(g=1:gens, .combine = "rbind")%do%{
if(g==1){p_recur[g]=p}
p_recur[g+1] = calc_p_t1(p_recur[g],
(1-p_recur[g]),
wAA, wAa, waa)
data.frame(gen=g, p=p_recur[g+1],
wAA=wAA, wAa=wAa, waa=waa, pinit=p)
}
data.frame(gen=0:gens, p_recur=p_recur) %>%
ggplot(aes(
x=gen,
y=p_recur
)) + geom_line(size = 1.5) +
geom_vline(xintercept = 50) +
xlab("Generations") + ylab("p")
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.9),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.95),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) -> sims.sel
delta =
foreach(g=2:50, .combine = "rbind"
)%do%{
p1 = sims.sel$p_recur[g]
p0 = sims.sel$p_recur[g-1]
data.frame(g, delta = p1-p0)
}
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta*"p"))
gens=10000
p = 0.5
q= 1-p
wAA=1
wAa=1
waa=0.8
p_recur=c()
simulating.selection=
foreach(g=1:gens, .combine = "rbind")%do%{
if(g==1){p_recur[g]=p}
p_recur[g+1] = calc_p_t1(p_recur[g],
(1-p_recur[g]),
wAA, wAa, waa)
data.frame(gen=g, p=p_recur[g+1],
wAA=wAA, wAa=wAa, waa=waa, pinit=p)
}
data.frame(gen=0:gens, p_recur=p_recur) %>%
ggplot(aes(
x=gen,
y=p_recur
)) + geom_line(size = 1.5) +
geom_vline(xintercept = 50) +
xlab("Generations") + ylab("p")
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.9),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.95),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) -> sims.sel
delta =
foreach(g=2:50, .combine = "rbind"
)%do%{
p1 = sims.sel$p_recur[g]
p0 = sims.sel$p_recur[g-1]
data.frame(g, delta = p1-p0)
}
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta*"p"))
delta =
foreach(g=2:10000, .combine = "rbind"
)%do%{
p1 = sims.sel$p_recur[g]
p0 = sims.sel$p_recur[g-1]
data.frame(g, delta = p1-p0)
}
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta*"p"))
delta
delta[which(delta == 0),]
delta[which(delta == 0),]
delta %>% View()
gens=50000
p = 0.5
q= 1-p
wAA=1
wAa=1
waa=0.8
p_recur=c()
simulating.selection=
foreach(g=1:gens, .combine = "rbind")%do%{
if(g==1){p_recur[g]=p}
p_recur[g+1] = calc_p_t1(p_recur[g],
(1-p_recur[g]),
wAA, wAa, waa)
data.frame(gen=g, p=p_recur[g+1],
wAA=wAA, wAa=wAa, waa=waa, pinit=p)
}
data.frame(gen=0:gens, p_recur=p_recur) %>%
ggplot(aes(
x=gen,
y=p_recur
)) + geom_line(size = 1.5) +
geom_vline(xintercept = 50) +
xlab("Generations") + ylab("p")
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.9),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.95),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) -> sims.sel
delta =
foreach(g=2:50000, .combine = "rbind"
)%do%{
p1 = sims.sel$p_recur[g]
p0 = sims.sel$p_recur[g-1]
data.frame(g, delta = p1-p0)
}
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta*"p"))
delta %>% View
gens=10000
p = 0.5
q= 1-p
wAA=1
wAa=1
waa=0.5
p_recur=c()
simulating.selection=
foreach(g=1:gens, .combine = "rbind")%do%{
if(g==1){p_recur[g]=p}
p_recur[g+1] = calc_p_t1(p_recur[g],
(1-p_recur[g]),
wAA, wAa, waa)
data.frame(gen=g, p=p_recur[g+1],
wAA=wAA, wAa=wAa, waa=waa, pinit=p)
}
data.frame(gen=0:gens, p_recur=p_recur) %>%
ggplot(aes(
x=gen,
y=p_recur
)) + geom_line(size = 1.5) +
geom_vline(xintercept = 50) +
xlab("Generations") + ylab("p")
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.9),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) %>%
.[which(.$p_recur>0.95),] %>% .[1,]
data.frame(gen=0:gens, p_recur=p_recur) -> sims.sel
delta =
foreach(g=2:50000, .combine = "rbind"
)%do%{
p1 = sims.sel$p_recur[g]
p0 = sims.sel$p_recur[g-1]
data.frame(g, delta = p1-p0)
}
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta*"p"))
delta
delta %>% View
delta =
foreach(g=2:10000, .combine = "rbind"
)%do%{
p1 = sims.sel$p_recur[g]
p0 = sims.sel$p_recur[g-1]
data.frame(g, delta = p1-p0)
}
delta %>%
ggplot(aes(
x=g,
y=delta
)) + geom_line() +
xlab("time (gens)") +
ylab(expression(Delta*"p"))
delta
delta %>% View
37:100
37:100
37+25
63:100
37:62
27:100 %>% length()
74/2
37+37
74+37
74/3
37:100
37:100 %>% length()
64/2
64/4
37+16
54+16
71+16
87library(data.table)
library(data.table)
library(tidyverse).
dat <- fread("/Users/jcnunez/Library/CloudStorage/GoogleDrive-joaquin.c.b.nunez@gmail.com/My\ Drive/Nunez\ Lab/Students/U.Eliza\ Bufferd/data/preelim_data.txt")
dat
dat %>%
group_by(line_name, genotype) %>%
summarise(Nt = sum(total),
Nhatc = sum(hatched))
dat %>% head
dat %>%
group_by(line_name, genotype) %>%
summarise(Nt = sum(total),
Nhatc = sum(hatched))
dat %>% names
dat <- fread("/Users/jcnunez/Library/CloudStorage/GoogleDrive-joaquin.c.b.nunez@gmail.com/My\ Drive/Nunez\ Lab/Students/U.Eliza\ Bufferd/data/preelim_data.txt")
dat %>%
group_by(line_name, genotype) %>%
summarise(Nt = sum(total),
Nhatc = sum(hatched))
dat <- fread("/Users/jcnunez/Library/CloudStorage/GoogleDrive-joaquin.c.b.nunez@gmail.com/My\ Drive/Nunez\ Lab/Students/U.Eliza\ Bufferd/data/preelim_data.txt")
dat %>%
group_by(line_name, genotype) %>%
summarise(Nt = sum(total),
Nhatc = sum(hatched))
dat %>%
group_by(line_name, genotype) %>%
summarise(Nt = sum(total),
Nhatc = sum(hatched)) %>%
mutate(hatrate = Nhatc/Nt)
dat %>%
group_by(line_name, genotype) %>%
summarise(Nt = sum(total),
Nhatc = sum(hatched)) %>%
mutate(hatrate = Nhatc/Nt) -> dat.ag
?kruskal.test
kruskal.test(hatrate ~ genotype, data = dat.ag)
t.test(hatrate ~ genotype, data = dat.ag)
line_name
ygenotype
dat.ag %>%
ggplot(aes(
x=line_name
y=hatrate,
dat.ag
dat.ag %>%
ggplot(aes(
x=line_name
y=hatrate,
dat.ag %>%
ggplot(aes(
x=line_name,
y=hatrate,
color = genotype
)) + geom_point()
dat.ag %>%
ggplot(aes(
x=line_name,
y=hatrate,
color = genotype
)) + geom_point(size = 2)
dat.ag %>%
ggplot(aes(
x=line_name,
y=hatrate,
color = genotype
)) + geom_point(size = 5)
load("/Users/jcnunez/Downloads/collect.COUNTS.sim.drift.35.Rdata")
o2.arr
o2.arr %>% View()
o2.arr %>% tail
o2.arr$chr %>% table
library(tidyverse)
library(foreach)
library(reshape2)
install.packages("reshape2")
library(tidyverse)
library(foreach)
library(reshape2)
load("/Users/jcnunez/Library/CloudStorage/OneDrive-UniversityofVermont/Documents/GitHub/DESTv2_data_paper/FIGUREs/FIGURE3_PCA/data_for_reproduction/PCA.results.df.Rdata")
PCA.results.df$case %>% table
cors.pcs.chrs=
foreach( ch = c("2L", "2R", "3L", "3R"),
.combine = "rbind")%do%{
message(ch)
PCA.results.df %>%
filter(case == ch) ->
tmp
foreach(cont = c("Europe", "North_America"),
.combine = "rbind")%do%{
message(cont)
tmp %>%
filter(continent == cont) ->
tmp2
la1= cor.test(tmp2$Dim.1, tmp2$lat)
la2= cor.test(tmp2$Dim.2, tmp2$lat)
la3= cor.test(tmp2$Dim.3, tmp2$lat)
lo1= cor.test(tmp2$Dim.1, tmp2$long)
lo2= cor.test(tmp2$Dim.2, tmp2$long)
lo3= cor.test(tmp2$Dim.3, tmp2$long)
data.frame(
ch,
cont,
la1_e = la1$estimate,
la1_lci = la1$conf.int[1],
la1_uci = la1$conf.int[2],
la2_e = la2$estimate,
la2_lci = la2$conf.int[1],
la2_uci = la2$conf.int[2],
la3_e = la3$estimate,
la3_lci = la3$conf.int[1],
la3_uci = la3$conf.int[2],
lo1_e = lo1$estimate,
lo1_lci = lo1$conf.int[1],
lo1_uci = lo1$conf.int[2],
lo2_e = lo2$estimate,
lo2_lci = lo2$conf.int[1],
lo2_uci = lo2$conf.int[2],
lo3_e = lo3$estimate,
lo3_lci = lo3$conf.int[1],
lo3_uci = lo3$conf.int[2]
)
}}
cors.pcs.chrs %>%
melt(id = c("ch", "cont")) %>%
separate(variable, into = c("var", "est"), sep = "_") %>%
dcast(ch+cont+var~est, value.var = "value") %>%
separate(var, into = c("vat","pc"), 2) %>%
ggplot(aes(
x=paste(vat,pc),
color=pc,
y=e,
ymin=lci,
ymax=uci,
)) +
geom_hline(yintercept =  0) +
geom_errorbar(width = 0.1,position=position_dodge(width=0.5) ) +
geom_point(position=position_dodge(width=0.5)) +
facet_grid(cont~ch)
